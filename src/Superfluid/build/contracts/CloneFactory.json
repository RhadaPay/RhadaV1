{
  "contractName": "CloneFactory",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/franz/hackaton/RhadaV1/src/Superfluid/contracts/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/franz/hackaton/RhadaV1/src/Superfluid/contracts/CloneFactory.sol\":{\"keccak256\":\"0x4e05ae640a71e852f98279b49749e988ae163c2c71325a12cc1431637e1dda1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6535f0795314954a33279beee78cd353b4d6a1ba9366cef331634b4685b74ca7\",\"dweb:/ipfs/QmPicXPBJ6hwNf4CQj65Km3Xi8gz85zLkS5GeeHRdNpH7r\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220447218b96383a851e4c26d6efd3f2911768196df26095786771ba1f0e1c40b3b64736f6c63430007060033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220447218b96383a851e4c26d6efd3f2911768196df26095786771ba1f0e1c40b3b64736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "1343:2572:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1343:2572:0:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n// from https://github.com/optionality/clone-factory\npragma solidity 0.7.6;\n\n/*\n    The MIT License (MIT)\n    Copyright (c) 2018 Murray Software, LLC.\n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n    \"Software\"), to deal in the Software without restriction, including\n    without limitation the rights to use, copy, modify, merge, publish,\n    distribute, sublicense, and/or sell copies of the Software, and to\n    permit persons to whom the Software is furnished to do so, subject to\n    the following conditions:\n    The above copyright notice and this permission notice shall be included\n    in all copies or substantial portions of the Software.\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n//solhint-disable max-line-length\n//solhint-disable no-inline-assembly\n\ncontract CloneFactory {\n  function createClone(address target, bytes32 salt)\n    internal\n    returns (address payable result)\n  {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      // load the next free memory slot as a place to store the clone contract data\n      let clone := mload(0x40)\n\n      // The bytecode block below is responsible for contract initialization\n      // during deployment, it is worth noting the proxied contract constructor will not be called during\n      // the cloning procedure and that is why an initialization function needs to be called after the\n      // clone is created\n      mstore(\n        clone,\n        0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n      )\n\n      // This stores the address location of the implementation contract\n      // so that the proxy knows where to delegate call logic to\n      mstore(add(clone, 0x14), targetBytes)\n\n      // The bytecode block is the actual code that is deployed for each clone created.\n      // It forwards all calls to the already deployed implementation via a delegatecall\n      mstore(\n        add(clone, 0x28),\n        0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n      )\n\n      // deploy the contract using the CREATE2 opcode\n      // this deploys the minimal proxy defined above, which will proxy all\n      // calls to use the logic defined in the implementation contract `target`\n      result := create2(0, clone, 0x37, salt)\n    }\n  }\n\n  function isClone(address target, address query)\n    internal\n    view\n    returns (bool result)\n  {\n    bytes20 targetBytes = bytes20(target);\n    assembly {\n      // load the next free memory slot as a place to store the comparison clone\n      let clone := mload(0x40)\n\n      // The next three lines store the expected bytecode for a miniml proxy\n      // that targets `target` as its implementation contract\n      mstore(\n        clone,\n        0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000\n      )\n      mstore(add(clone, 0xa), targetBytes)\n      mstore(\n        add(clone, 0x1e),\n        0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n      )\n\n      // the next two lines store the bytecode of the contract that we are checking in memory\n      let other := add(clone, 0x40)\n      extcodecopy(query, other, 0, 0x2d)\n\n      // Check if the expected bytecode equals the actual bytecode and return the result\n      result := and(\n        eq(mload(clone), mload(other)),\n        eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\n      )\n    }\n  }\n}",
  "sourcePath": "/home/franz/hackaton/RhadaV1/src/Superfluid/contracts/CloneFactory.sol",
  "ast": {
    "absolutePath": "/home/franz/hackaton/RhadaV1/src/Superfluid/contracts/CloneFactory.sol",
    "exportedSymbols": {
      "CloneFactory": [
        38
      ]
    },
    "id": 39,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "85:22:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "CloneFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "1472:1350:0",
              "statements": [
                {
                  "assignments": [
                    11
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "1478:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1478:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 14,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1508:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1500:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "1500:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1478:37:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1530:1288:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1622:24:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1641:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1635:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1635:11:0"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "1626:5:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "1982:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1997:66:0",
                              "type": "",
                              "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1966:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1966:105:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1966:105:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2235:4:0",
                                  "type": "",
                                  "value": "0x14"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2224:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2224:16:0"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "2242:11:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2217:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2217:37:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2217:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "2459:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2466:4:0",
                                  "type": "",
                                  "value": "0x28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2455:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2455:16:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2481:66:0",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2439:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2439:116:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2439:116:0"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2773:39:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2791:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "2794:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2801:4:0",
                              "type": "",
                              "value": "0x37"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "2807:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "2783:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2783:29:0"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "2773:6:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 8,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2773:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2807:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 11,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2242:11:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 17,
                  "nodeType": "InlineAssembly",
                  "src": "1521:1297:0"
                }
              ]
            },
            "id": 19,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createClone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1390:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1406:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1389:30:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "1446:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1445:24:0"
            },
            "scope": 38,
            "src": "1369:1453:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "2924:989:0",
              "statements": [
                {
                  "assignments": [
                    29
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29,
                      "mutability": "mutable",
                      "name": "targetBytes",
                      "nodeType": "VariableDeclaration",
                      "scope": 36,
                      "src": "2930:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes20",
                        "typeString": "bytes20"
                      },
                      "typeName": {
                        "id": 28,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "2930:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 32,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "2960:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2952:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes20_$",
                        "typeString": "type(bytes20)"
                      },
                      "typeName": {
                        "id": 30,
                        "name": "bytes20",
                        "nodeType": "ElementaryTypeName",
                        "src": "2952:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes20",
                      "typeString": "bytes20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2930:37:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2982:927:0",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3071:24:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3090:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3084:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3084:11:0"
                        },
                        "variables": [
                          {
                            "name": "clone",
                            "nodeType": "YulTypedName",
                            "src": "3075:5:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "3258:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3273:66:0",
                              "type": "",
                              "value": "0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3242:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3242:105:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3242:105:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "3365:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3372:3:0",
                                  "type": "",
                                  "value": "0xa"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3361:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3361:15:0"
                            },
                            {
                              "name": "targetBytes",
                              "nodeType": "YulIdentifier",
                              "src": "3378:11:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3354:36:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3354:36:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulIdentifier",
                                  "src": "3417:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3424:4:0",
                                  "type": "",
                                  "value": "0x1e"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3413:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3413:16:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3439:66:0",
                              "type": "",
                              "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3397:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3397:116:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3397:116:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3615:29:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "clone",
                              "nodeType": "YulIdentifier",
                              "src": "3632:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3639:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3628:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3628:16:0"
                        },
                        "variables": [
                          {
                            "name": "other",
                            "nodeType": "YulTypedName",
                            "src": "3619:5:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "query",
                              "nodeType": "YulIdentifier",
                              "src": "3663:5:0"
                            },
                            {
                              "name": "other",
                              "nodeType": "YulIdentifier",
                              "src": "3670:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3677:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3680:4:0",
                              "type": "",
                              "value": "0x2d"
                            }
                          ],
                          "functionName": {
                            "name": "extcodecopy",
                            "nodeType": "YulIdentifier",
                            "src": "3651:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3651:34:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3651:34:0"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3782:121:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "clone",
                                      "nodeType": "YulIdentifier",
                                      "src": "3814:5:0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3808:5:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3808:12:0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "other",
                                      "nodeType": "YulIdentifier",
                                      "src": "3828:5:0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3822:5:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3822:12:0"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "3805:2:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3805:30:0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "clone",
                                          "nodeType": "YulIdentifier",
                                          "src": "3858:5:0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3865:3:0",
                                          "type": "",
                                          "value": "0xd"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3854:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3854:15:0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3848:5:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3848:22:0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "other",
                                          "nodeType": "YulIdentifier",
                                          "src": "3882:5:0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3889:3:0",
                                          "type": "",
                                          "value": "0xd"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3878:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3878:15:0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3872:5:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3872:22:0"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "3845:2:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3845:50:0"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3792:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3792:111:0"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "3782:6:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 23,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3663:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 26,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3782:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 29,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3378:11:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 35,
                  "nodeType": "InlineAssembly",
                  "src": "2973:936:0"
                }
              ]
            },
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isClone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "2843:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2843:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "query",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "2859:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2859:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2842:31:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "2909:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2909:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2908:13:0"
            },
            "scope": 38,
            "src": "2826:1087:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 39,
        "src": "1343:2572:0"
      }
    ],
    "src": "85:3830:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/franz/hackaton/RhadaV1/src/Superfluid/contracts/CloneFactory.sol",
      "exportedSymbols": {
        "CloneFactory": [
          38
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "85:22:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            38
          ],
          "name": "CloneFactory",
          "scope": 39
        },
        "children": [
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createClone",
              "scope": 38,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "target",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2,
                        "name": "ElementaryTypeName",
                        "src": "1390:7:0"
                      }
                    ],
                    "id": 3,
                    "name": "VariableDeclaration",
                    "src": "1390:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "salt",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 4,
                        "name": "ElementaryTypeName",
                        "src": "1406:7:0"
                      }
                    ],
                    "id": 5,
                    "name": "VariableDeclaration",
                    "src": "1406:12:0"
                  }
                ],
                "id": 6,
                "name": "ParameterList",
                "src": "1389:30:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "result",
                      "scope": 19,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 7,
                        "name": "ElementaryTypeName",
                        "src": "1446:15:0"
                      }
                    ],
                    "id": 8,
                    "name": "VariableDeclaration",
                    "src": "1446:22:0"
                  }
                ],
                "id": 9,
                "name": "ParameterList",
                "src": "1445:24:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        11
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "targetBytes",
                          "scope": 18,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes20",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes20",
                              "type": "bytes20"
                            },
                            "id": 10,
                            "name": "ElementaryTypeName",
                            "src": "1478:7:0"
                          }
                        ],
                        "id": 11,
                        "name": "VariableDeclaration",
                        "src": "1478:19:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bytes20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(bytes20)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "bytes20"
                                },
                                "id": 12,
                                "name": "ElementaryTypeName",
                                "src": "1500:7:0"
                              }
                            ],
                            "id": 13,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1500:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3,
                              "type": "address",
                              "value": "target"
                            },
                            "id": 14,
                            "name": "Identifier",
                            "src": "1508:6:0"
                          }
                        ],
                        "id": 15,
                        "name": "FunctionCall",
                        "src": "1500:15:0"
                      }
                    ],
                    "id": 16,
                    "name": "VariableDeclarationStatement",
                    "src": "1478:37:0"
                  },
                  {
                    "attributes": {
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 8,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2773:6:0",
                          "valueSize": 1
                        },
                        {
                          "declaration": 5,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2807:4:0",
                          "valueSize": 1
                        },
                        {
                          "declaration": 11,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2242:11:0",
                          "valueSize": 1
                        }
                      ],
                      "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n    mstore(add(clone, 0x14), targetBytes)\n    mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    result := create2(0, clone, 0x37, salt)\n}"
                    },
                    "children": [],
                    "id": 17,
                    "name": "InlineAssembly",
                    "src": "1521:1297:0"
                  }
                ],
                "id": 18,
                "name": "Block",
                "src": "1472:1350:0"
              }
            ],
            "id": 19,
            "name": "FunctionDefinition",
            "src": "1369:1453:0"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isClone",
              "scope": 38,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "target",
                      "scope": 37,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "2843:7:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "2843:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "query",
                      "scope": 37,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "2859:7:0"
                      }
                    ],
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "2859:13:0"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "2842:31:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "result",
                      "scope": 37,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 25,
                        "name": "ElementaryTypeName",
                        "src": "2909:4:0"
                      }
                    ],
                    "id": 26,
                    "name": "VariableDeclaration",
                    "src": "2909:11:0"
                  }
                ],
                "id": 27,
                "name": "ParameterList",
                "src": "2908:13:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        29
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "targetBytes",
                          "scope": 36,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes20",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes20",
                              "type": "bytes20"
                            },
                            "id": 28,
                            "name": "ElementaryTypeName",
                            "src": "2930:7:0"
                          }
                        ],
                        "id": 29,
                        "name": "VariableDeclaration",
                        "src": "2930:19:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bytes20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(bytes20)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "bytes20"
                                },
                                "id": 30,
                                "name": "ElementaryTypeName",
                                "src": "2952:7:0"
                              }
                            ],
                            "id": 31,
                            "name": "ElementaryTypeNameExpression",
                            "src": "2952:7:0"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "address",
                              "value": "target"
                            },
                            "id": 32,
                            "name": "Identifier",
                            "src": "2960:6:0"
                          }
                        ],
                        "id": 33,
                        "name": "FunctionCall",
                        "src": "2952:15:0"
                      }
                    ],
                    "id": 34,
                    "name": "VariableDeclarationStatement",
                    "src": "2930:37:0"
                  },
                  {
                    "attributes": {
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 23,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3663:5:0",
                          "valueSize": 1
                        },
                        {
                          "declaration": 26,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3782:6:0",
                          "valueSize": 1
                        },
                        {
                          "declaration": 29,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3378:11:0",
                          "valueSize": 1
                        }
                      ],
                      "operations": "{\n    let clone := mload(0x40)\n    mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\n    mstore(add(clone, 0xa), targetBytes)\n    mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n    let other := add(clone, 0x40)\n    extcodecopy(query, other, 0, 0x2d)\n    result := and(eq(mload(clone), mload(other)), eq(mload(add(clone, 0xd)), mload(add(other, 0xd))))\n}"
                    },
                    "children": [],
                    "id": 35,
                    "name": "InlineAssembly",
                    "src": "2973:936:0"
                  }
                ],
                "id": 36,
                "name": "Block",
                "src": "2924:989:0"
              }
            ],
            "id": 37,
            "name": "FunctionDefinition",
            "src": "2826:1087:0"
          }
        ],
        "id": 38,
        "name": "ContractDefinition",
        "src": "1343:2572:0"
      }
    ],
    "id": 39,
    "name": "SourceUnit",
    "src": "85:3830:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-08-03T14:27:26.657Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}